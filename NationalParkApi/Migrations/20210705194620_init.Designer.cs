// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NationalParkApi.Data;

namespace NationalParkApi.Migrations
{
    [DbContext(typeof(NpContext))]
    [Migration("20210705194620_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NationalParkApi.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TrailId")
                        .HasColumnType("int");

                    b.Property<string>("activity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TrailId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("NationalParkApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParkId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("NationalParkApi.Models.CommonName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("CommonNames");
                });

            modelBuilder.Entity("NationalParkApi.Models.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("NationalParkApi.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TrailId")
                        .HasColumnType("int");

                    b.Property<string>("feature")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TrailId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("NationalParkApi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("NationalParkApi.Models.Park", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acres")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("NationalParkApi.Models.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abundance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conservation_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("Nativeness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Park")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Record_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scientific_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seasonality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species_ID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("NationalParkApi.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParkId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("NationalParkApi.Models.Trail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("areaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("avgRating")
                        .HasColumnType("float");

                    b.Property<string>("cityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("difficultyRating")
                        .HasColumnType("int");

                    b.Property<double>("elevation")
                        .HasColumnType("float");

                    b.Property<double>("length")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numReviews")
                        .HasColumnType("int");

                    b.Property<double>("popularity")
                        .HasColumnType("float");

                    b.Property<string>("routeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("visitorUsage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Trails");
                });

            modelBuilder.Entity("NationalParkApi.Models.Activity", b =>
                {
                    b.HasOne("NationalParkApi.Models.Trail", null)
                        .WithMany("activities")
                        .HasForeignKey("TrailId");
                });

            modelBuilder.Entity("NationalParkApi.Models.Category", b =>
                {
                    b.HasOne("NationalParkApi.Models.Park", null)
                        .WithMany("Categories")
                        .HasForeignKey("ParkId");
                });

            modelBuilder.Entity("NationalParkApi.Models.CommonName", b =>
                {
                    b.HasOne("NationalParkApi.Models.Species", null)
                        .WithMany("Common_Names")
                        .HasForeignKey("SpeciesId");
                });

            modelBuilder.Entity("NationalParkApi.Models.Family", b =>
                {
                    b.HasOne("NationalParkApi.Models.Order", null)
                        .WithMany("Families")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("NationalParkApi.Models.Feature", b =>
                {
                    b.HasOne("NationalParkApi.Models.Trail", null)
                        .WithMany("features")
                        .HasForeignKey("TrailId");
                });

            modelBuilder.Entity("NationalParkApi.Models.Order", b =>
                {
                    b.HasOne("NationalParkApi.Models.Category", null)
                        .WithMany("Orders")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("NationalParkApi.Models.Species", b =>
                {
                    b.HasOne("NationalParkApi.Models.Family", null)
                        .WithMany("Species")
                        .HasForeignKey("FamilyId");
                });

            modelBuilder.Entity("NationalParkApi.Models.State", b =>
                {
                    b.HasOne("NationalParkApi.Models.Park", null)
                        .WithMany("States")
                        .HasForeignKey("ParkId");
                });

            modelBuilder.Entity("NationalParkApi.Models.Category", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("NationalParkApi.Models.Family", b =>
                {
                    b.Navigation("Species");
                });

            modelBuilder.Entity("NationalParkApi.Models.Order", b =>
                {
                    b.Navigation("Families");
                });

            modelBuilder.Entity("NationalParkApi.Models.Park", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("States");
                });

            modelBuilder.Entity("NationalParkApi.Models.Species", b =>
                {
                    b.Navigation("Common_Names");
                });

            modelBuilder.Entity("NationalParkApi.Models.Trail", b =>
                {
                    b.Navigation("activities");

                    b.Navigation("features");
                });
#pragma warning restore 612, 618
        }
    }
}
